syntax = "proto3";

package envoy.config.filter.http.lua.v2;

option java_outer_classname = "LuaProto";
option java_multiple_files = true;
option java_package = "io.envoyproxy.envoy.config.filter.http.lua.v2";
option go_package = "v2";

import "google/protobuf/any.proto";
import "validate/validate.proto";

// [#protodoc-title: Lua]
// Lua :ref:`configuration overview <config_http_filters_lua>`.


message LuaPlugin {
    string name = 1;
    //google.protobuf.Any config = 2;
    string config = 2;

}

message Lua {
  // The Lua code that Envoy will execute. This can be a very small script that
  // further loads code from disk if desired. Note that if JSON configuration is used, the code must
  // be properly escaped. YAML configuration may be easier to read since YAML supports multi-line
  // strings so complex scripts can be easily expressed inline in the configuration.
  string inline_code = 1 [(validate.rules).string.min_bytes = 1];

  string script_dir = 2 [(validate.rules).string.min_bytes = 1];
  
  // enabled the plugin list and config
  repeated LuaPlugin plugins = 3  ;


}
